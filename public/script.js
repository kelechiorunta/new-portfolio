/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/style.scss":
/*!************************!*\
  !*** ./src/style.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://new-portfolio/./src/style.scss?");

/***/ }),

/***/ "./src/apis/animate.js":
/*!*****************************!*\
  !*** ./src/apis/animate.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animateAvatarimages: () => (/* binding */ animateAvatarimages),\n/* harmony export */   animateSections: () => (/* binding */ animateSections)\n/* harmony export */ });\nconst animateSections = (sections) => {\n    const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry, index) => {\n            if (entry.isIntersecting) {\n                if (entry.target.classList.contains('about-section')){\n                    const children = entry.target.children;\n            Array.from(children).forEach((child, index) => {\n                setTimeout(() => {\n                    child.style.opacity = 1;\n                    child.style.transform = \"translateX(0%)\";\n                }, index * 500); // Stagger effect\n            });\n                }\n                else {\n                const children = entry.target.children;\n            Array.from(children).forEach((child, index) => {\n                setTimeout(() => {\n                    child.style.opacity = 1;\n                    child.style.transform = \"translateY(0)\";\n                }, index * 500); // Stagger effect\n            });\n        }\n                entry.target.style.transitionDelay = `${index * 2000}s`; // Stagger effect\n                entry.target.classList.add(\"visible\");\n                observer.unobserve(entry.target); // Stop observing once animated\n            }\n        \n        });\n    }, { threshold: 0 });\n\n    \n\n    sections.forEach((section) => {\n        if (section.classList.contains('about-section')){\n            const children = section.children;\n            Array.from(children).forEach((child) => {\n                child.style.opacity = 0;\n                child.style.transform = \"translateX(-100%)\";\n                child.style.transition = \"opacity 1.8s ease-out, transform 1.6s ease-in-out\";\n            });\n        } else {\n        const children = section.children;\n        Array.from(children).forEach((child) => {\n            child.style.opacity = 0;\n            child.style.transform = \"translateY(200px)\";\n            child.style.transition = \"opacity 0.8s ease-out, transform 0.6s ease-out\";\n        });\n    }\n\n        observer.observe(section);\n    });\n}\n\n\n\n\n//animate avatar images\n\nconst slideInterval = 4000;\n    var currentSlide = 1;\n    var projSlide=0;\n    var autoSlide;\n    var direction;\n    var textTimeout;\n    var textSlide, nexttextSlide;\n    var firstIndex = 0;\n    var animateInterval = 100;\n    \n\nconst animateAvatarimages = (blurDivs) => {\n    const slideImgs = document.querySelectorAll('.avatar .carousel .blur-load');\n    const curvedSection = document.querySelector('.avatar .curved-section');\n    \n    blurDivs.forEach(div => {\n        const img = div.querySelector('img')\n        \n        function loaded() {\n            //show img\n            div.classList.add('loaded')\n        }\n    \n       \n        if (img.complete){\n            loaded()\n        }else{\n            img.addEventListener('load', loaded)\n        }\n    \n    })\n    \n    function showSlide(index, direction) {\n    \n        curvedSection.setAttribute('data-direction', direction)\n    \n        slideImgs.forEach((slide, i) => {\n            if ((i === index)) {\n                slide.classList.add('active');\n                slide.classList.remove('exit')\n            }else if (slide.classList.contains('active')) {\n                slide.classList.remove('active')\n                slide.classList.add('exit')\n            }else{\n                slide.classList.remove('active', 'exit')\n            }\n        })\n    }\n\n    const root = document.querySelector(':root');\n    \n    function nextSlide(){\n        if (!document.hidden){ \n        currentSlide = (currentSlide + 1) % slideImgs.length;\n        root.style.setProperty('--left', '100%')\n        }\n        showSlide(currentSlide, 'next');\n        \n    }\n    \n    function prevSlide(){\n        currentSlide = (currentSlide - 1 + slideImgs.length) % slideImgs.length;\n        showSlide(currentSlide, 'prev');\n    }\n    \n     // Initial display of the first slide\n     showSlide(currentSlide, 'next');\n      \n     // Auto-slide every few seconds\n     clearInterval(autoSlide)\n     \n    autoSlide = setInterval(nextSlide, slideInterval);\n    \n}\n\n\n\n//# sourceURL=webpack://new-portfolio/./src/apis/animate.js?");

/***/ }),

/***/ "./src/apis/sendMessage.js":
/*!*********************************!*\
  !*** ./src/apis/sendMessage.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendMessage: () => (/* binding */ sendMessage)\n/* harmony export */ });\n/* harmony import */ var _toaster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toaster.js */ \"./src/apis/toaster.js\");\n\n\nconst sendMessage = async(event) => {\n    event.preventDefault();\n    const form = document.forms[0];\n\n    const email = form.elements['email'].value;\n    const name = form.elements['name'].value;\n    const message = form.elements['message'].value;\n\n    const divSpinner = form.querySelector('.sendBtn');\n    const spinnerContainer = divSpinner.querySelector('.spinner_container');\n\n\n    if (!name || !email || !message) {\n        const sendMessageBtn = document.forms[0].querySelector('.sendBtn');\n        // sendMessageBtn.classList.add('ignore')\n        (0,_toaster_js__WEBPACK_IMPORTED_MODULE_0__.createToaster)(\"Please complete the fields\", 'failed')\n        // alert('Please complete the fields');\n        // return\n    }\n    else{\n        console.log({name, email, message})\n        spinnerContainer.style.display = 'block'\n        const formdata = {name, email, message}\n        try{\n            const response = await fetch('/send-email', {\n                method: 'POST',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type' : 'application/json',\n                    \n                },\n                body: JSON.stringify(formdata)\n            })\n            const result = await response.json();\n            (0,_toaster_js__WEBPACK_IMPORTED_MODULE_0__.createToaster)(result?.message, 'success')\n        }\n        catch(err){\n            console.error(err)\n            ;(0,_toaster_js__WEBPACK_IMPORTED_MODULE_0__.createToaster)(err, 'failed');\n        }\n        finally{\n            form.elements['name'].value = \"\";\n            form.elements['email'].value = \"\";\n            form.elements['message'].value = \"\";\n            spinnerContainer.style.display = 'none';\n            // sendMessageBtn.classList.add('ignore');\n        }\n    }\n   \n}\n\n\n\n//# sourceURL=webpack://new-portfolio/./src/apis/sendMessage.js?");

/***/ }),

/***/ "./src/apis/toaster.js":
/*!*****************************!*\
  !*** ./src/apis/toaster.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createToaster: () => (/* binding */ createToaster)\n/* harmony export */ });\n/**\n * TOASTER FUNCTION\n */\n\n// const createToaster = (text, status) => {\n//     // Get the snackbar DIV\n//     var toaster = document.getElementById(\"snackbar\");\n//     var mySVG = document.getElementById(\"mySVG\");\n//     var triangle = document.getElementById(\"triangle\");\n//     var path1 = document.getElementById(\"crossPath1\");\n//     var path2 = document.getElementById(\"crossPath2\");\n//     var length = triangle.getTotalLength();\n//     var error_length1 = path1.getTotalLength();\n//     var error_length2 = path2.getTotalLength();\n//     const paginationBtns = document.querySelectorAll('.pagination button')\n//     // Set up stroke-dash properties\n//     triangle.style.strokeDasharray = length;\n//     triangle.style.strokeDashoffset = length;\n    \n//     path1.style.strokeDashoffset = error_length1;\n//     path2.style.strokeDashoffset = error_length2;\n    \n\n//     if (mySVG){\n//         // alert(\"SVG\");\n//         mySVG.style.setProperty('height', '100px')\n//         mySVG.style.setProperty('width', '100px')\n//         mySVG.style.setProperty('padding', '1rem')\n//         mySVG.style.setProperty('background-color', 'transparent')\n//         mySVG.style.setProperty('border', '2px solid white')\n//         mySVG.style.setProperty('z-index', '10')\n//         mySVG.style.setProperty('margin', 'auto')\n//         mySVG.style.setProperty('border-radius', '50%')\n//         mySVG.style.setProperty('display', 'flex')\n//         mySVG.style.setProperty('align-items', 'center')\n//         mySVG.style.setProperty('justify-content', 'center')\n\n//     }\n//    // Animation\n//    let start;\n  \n//    const drawLine = (timestamp) => {\n//      if (!start) start = timestamp;\n \n//      // Calculate progress based on time elapsed\n//      const elapsed = timestamp - start;\n//      const progress = Math.min(elapsed / 1000, 1); // Animate over 2 seconds (2000ms)\n \n//      // Update strokeDashoffset based on progress\n//      if (status === 'success') {\n//         triangle.style.strokeDashoffset = length * (1 - progress);\n//         status='';\n//      } else {\n//         path1.style.strokeDashoffset = error_length1 * (1 - progress);\n//         path2.style.strokeDashoffset = error_length2 * (1 - progress);\n//         status='';\n//      }\n     \n \n//      if (progress < 1) {\n//        requestAnimationFrame(drawLine);\n//      }\n//    };\n \n//    // Start animation\n//    requestAnimationFrame(drawLine);\n    \n//     // Find scroll percentage on scroll (using cross-browser properties), and offset dash same amount as percentage scrolled\n  \n//     // Add the \"show\" class to DIV\n//     toaster.classList.add(\"show\");\n//     toaster.textContent = text;\n//     if (status === 'success') {\n//         mySVG.append(triangle)\n//         status='';\n//     }else{\n//         mySVG.append(path1)\n//         mySVG.append(path2)\n//         status='';\n//     }\n   \n//     toaster.append(mySVG)\n  \n//     // After 3 seconds, remove the show class from DIV\n//     setTimeout(function(){ toaster.classList.remove(\"show\"); \n//         status='';\n//         triangle.style.strokeDashoffset = length;\n//         path1.style.strokeDashoffset = error_length1;\n//         path2.style.strokeDashoffset = error_length2;\n//     }, 3000);\n//   }\n\nconst createToaster = (text, status) => {\n    // Get the snackbar container\n    var toaster = document.getElementById(\"snackbar\");\n\n    // Remove existing SVG to avoid duplicates\n    var existingSVG = document.getElementById(\"toasterSVG\");\n    if (existingSVG) {\n        existingSVG.remove();\n    }\n\n    // Create a new SVG container\n    var mySVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    mySVG.setAttribute(\"id\", \"toasterSVG\");\n    mySVG.setAttribute(\"width\", \"100\");\n    mySVG.setAttribute(\"height\", \"100\");\n    mySVG.setAttribute(\"viewBox\", \"0 0 50 50\");\n    mySVG.style.cssText = `\n        height: 100px;\n        width: 100px;\n        padding: 1rem;\n        background-color: transparent;\n        border: 2px solid white;\n        z-index: 10;\n        margin: auto;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    `;\n\n    let svgPath1, svgPath2;\n\n    if (status === 'success') {\n        svgPath1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        svgPath1.setAttribute(\"id\", \"successPath\");\n        svgPath1.setAttribute(\"d\", \"M5 25 L20 40 L45 10\");\n        svgPath1.setAttribute(\"stroke\", \"green\");\n        svgPath1.setAttribute(\"stroke-width\", \"3\");\n        svgPath1.setAttribute(\"fill\", \"none\");\n        mySVG.appendChild(svgPath1);\n    } else {\n        svgPath1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        svgPath1.setAttribute(\"id\", \"crossPath1\");\n        svgPath1.setAttribute(\"d\", \"M10 10 L40 40\");\n        svgPath1.setAttribute(\"stroke\", \"red\");\n        svgPath1.setAttribute(\"stroke-width\", \"5\");\n        svgPath1.setAttribute(\"fill\", \"none\");\n        svgPath1.setAttribute(\"stroke-linecap\", \"round\");\n\n        svgPath2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        svgPath2.setAttribute(\"id\", \"crossPath2\");\n        svgPath2.setAttribute(\"d\", \"M40 10 L10 40\");\n        svgPath2.setAttribute(\"stroke\", \"red\");\n        svgPath2.setAttribute(\"stroke-width\", \"5\");\n        svgPath2.setAttribute(\"fill\", \"none\");\n        svgPath2.setAttribute(\"stroke-linecap\", \"round\");\n\n        mySVG.appendChild(svgPath1);\n        mySVG.appendChild(svgPath2);\n    }\n\n    // Append the SVG to the toaster\n    toaster.innerHTML = \"\"; // Clear previous content\n    toaster.appendChild(mySVG);\n    toaster.appendChild(document.createTextNode(text));\n\n    // Get path lengths for animation\n    const length1 = svgPath1.getTotalLength();\n    const length2 = svgPath2 ? svgPath2.getTotalLength() : 0;\n\n    // Set initial stroke-dash properties\n    svgPath1.style.strokeDasharray = length1;\n    svgPath1.style.strokeDashoffset = length1;\n    if (svgPath2) {\n        svgPath2.style.strokeDasharray = length2;\n        svgPath2.style.strokeDashoffset = length2;\n    }\n\n    // Animation function\n    let start;\n    const drawLine = (timestamp) => {\n        if (!start) start = timestamp;\n        const elapsed = timestamp - start;\n        const progress = Math.min(elapsed / 500, 1);\n\n        svgPath1.style.strokeDashoffset = length1 * (1 - progress);\n        if (svgPath2) {\n            svgPath2.style.strokeDashoffset = length2 * (1 - progress);\n        }\n\n        if (progress < 1) {\n            requestAnimationFrame(drawLine);\n        }\n    };\n\n    requestAnimationFrame(drawLine);\n\n    // Show toaster\n    toaster.classList.add(\"show\");\n\n    // Hide toaster after 3 seconds\n    setTimeout(() => {\n        toaster.classList.remove(\"show\");\n    }, 3000);\n};\n\n// Example usage\n// createToaster(\"Operation Successful!\", \"success\");\n// createToaster(\"Something went wrong!\", \"error\");\n\n\n  ///////////////////////////////////////////////\n  \n\n//# sourceURL=webpack://new-portfolio/./src/apis/toaster.js?");

/***/ }),

/***/ "./src/apis/typer.js":
/*!***************************!*\
  !*** ./src/apis/typer.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animateText: () => (/* binding */ animateText)\n/* harmony export */ });\n//Promise based typer API for animating texts\n\nconst animateText = (textArg, textLabel, speed, delay) => {\n    return new Promise((resolve) => {\n        let index = 0;\n        let span;\n        textLabel.style.height = '100px'\n        // Typing Effect: Add characters one by one\n        const typeInterval = setInterval(() => {\n            if (index < textArg.length) {\n                span = document.createElement('span');\n                span.classList.add('animate');\n                span.textContent = textArg.charAt(index);\n                textLabel.append(span);\n                index++;\n            } else {\n                clearInterval(typeInterval); // Stop typing\n\n                // Wait before starting the delete effect\n                setTimeout(() => {\n                    let deleteIndex = textArg.length - 1;\n\n                    // Deleting Effect: Remove characters one by one\n                    const deleteInterval = setInterval(() => {\n                        if (deleteIndex >= 0) {\n                            textLabel.children[deleteIndex].remove();\n                            deleteIndex--;\n                        } else {\n                            clearInterval(deleteInterval); // Stop deleting\n                            resolve(); // Move to next text animation\n                        }\n                    }, speed/2); // Delete speed (faster than typing)\n                }, delay*2);\n            }\n        }, speed);\n    });\n};\n\n\n\n//# sourceURL=webpack://new-portfolio/./src/apis/typer.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.scss */ \"./src/style.scss\");\n/* harmony import */ var _apis_typer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apis/typer.js */ \"./src/apis/typer.js\");\n/* harmony import */ var _apis_animate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apis/animate.js */ \"./src/apis/animate.js\");\n/* harmony import */ var _apis_sendMessage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./apis/sendMessage.js */ \"./src/apis/sendMessage.js\");\n  // Webpack will process this\n\n\n\n\n// import { createToaster } from \"./apis/toaster.js\";\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const landingTitle = document.querySelector('.home-section .title');\n    const avatar = document.querySelector('.avatar');\n    const floatingNav = document.querySelector('.home-section .floating-nav');\n    const mainHeader = document.querySelector('.main-header');\n    const toggleBtn = mainHeader.querySelector('.toggle-container');\n    const homeSection = document.querySelector('.home-section');\n    const downloadCVBtn = homeSection.querySelector('.cont .download')\n\n    const aboutSection = document.querySelector('.about-section');\n    const parasection = aboutSection.querySelector('.about-container .about-description-container');\n    const para1 = parasection.querySelector('.description .para1');\n    const para2 = parasection.querySelector('.description .para2');\n    const para3 = parasection.querySelector('.description .para3');\n\n    const hamburgerBtn = mainHeader.querySelector('.hamburger-icon');\n    const hamburgerNav = hamburgerBtn.querySelector(\".overlay\");\n    const closehamburgerBtn = hamburgerNav.querySelector('.closebtn');\n    console.log(closehamburgerBtn)\n\n    // downloadCVBtn.addEventListener('click', async() => {\n    //     try{\n    //         const response = await fetch('/downloadResult', {\n    //             credentials: 'same-origin',\n    //             method:'GET',\n    //             headers: {\n    //                 'Content-Type' : 'application/json'\n    //             }\n    //         }\n    //         )\n    //         const result = await response.json();\n    //         createToaster(result?.message, 'success');\n    //     }\n    //     catch(err){\n    //         createToaster(err, 'failure');\n    //     }\n    // })\n\n    let istoggled = false;\n    let timeOut;\n    // ToggleBtn Animations\n    toggleBtn.addEventListener('click', function(){\n        const toggle = this.querySelector('.toggle');\n        toggle.classList.toggle('active');\n        if (!istoggled) {\n            homeSection.classList.add('backgroundAnimate'); //= 'url(/backgroundPic)';\n            // homeSection.style.backgroundImage = 'url(/backgroundPic)';\n            // timeOut = setTimeout(()=>{homeSection.style.backgroundImage = 'url(./imgs/developer_background.png)'},2000)//'url(./imgs/developer_background.png)';\n            // homeSection.style.filter = 'brightness(0.7)';\n            istoggled = true\n        } else {\n            // clearTimeout(timeOut);\n            homeSection.classList.remove('backgroundAnimate');\n            homeSection.style.backgroundImage = 'url(/imgs/developer.png)'//'url(./imgs/developer.png)';\n            istoggled = false\n        }\n        \n    })\n\n    /* Open when someone clicks on the span element */\n    function openNav() {\n        hamburgerNav.style.left = \"0%\";\n    }\n    \n    /* Close when someone clicks on the \"x\" symbol inside the overlay */\n    function closeNav() {\n        const hamburgerBtn = mainHeader.querySelector('.hamburger-icon');\n        const hamburgerNav = hamburgerBtn.querySelector(\".overlay\");\n        hamburgerNav.style.left = \"-100%\";\n    }\n\n    //Event delegation to the child closebtn\n    hamburgerBtn.addEventListener('click', (event) => {\n        if (event.target.classList.contains('closebtn')){\n            closeNav();\n        }else if (event.target.tagName === \"A\"){\n            closeNav();\n        }else{\n            openNav();\n        }\n    })\n\n    // Animate the landing-section contents with a delay of 5 secs\n    ;(0,_apis_typer_js__WEBPACK_IMPORTED_MODULE_1__.animateText)(\"Hi, I'm Kelechi\", landingTitle, 100, 2000)\n        .then(() => (0,_apis_typer_js__WEBPACK_IMPORTED_MODULE_1__.animateText)(\"Full-Stack Developer\", landingTitle, 100, 2000))\n        // .then(() => toggleBtn.click())\n        .then(() => (0,_apis_typer_js__WEBPACK_IMPORTED_MODULE_1__.animateText)(\"Fun Programmer\", landingTitle, 100, 2000))\n        .then(() => (0,_apis_typer_js__WEBPACK_IMPORTED_MODULE_1__.animateText)(\"Fun Learner\", landingTitle, 100, 2000))\n        .then(() => {\n            landingTitle.textContent = \"Hi, I'm Kelechi\";\n            avatar.style.transform = `translateY(calc(((590/1440) * 100vw) - calc((0/1440) * 100vw)))`;\n            avatar.style.opacity='1'\n            floatingNav.style.opacity='1'\n            landingTitle.classList.add('animate');\n            // toggleBtn.click();\n        });\n\n    // animateText(\"Hi, my name is Kelechi, and I specialize in web development that utilizes  HTML, CSS and Javascript.\", para1, 100, 2000)\n    // .then(() => {\n    //     para1.textContent = \"Hi, my name is Kelechi, and I specialize in web development that utilizes  HTML, CSS and Javascript.\";\n    // }).then(() => {\n    //     animateText(\"I am a highly motivated individual, who is committed to  implementing  clear and concise code that works. I am also committed to learning and understanding the processes or workflows in building optimized and functional websites.\", para2, 100, 2000)\n    // })\n    \n\n        //Animate avatar images\n        const blurDivs = avatar.querySelectorAll('.blur-load')\n        ;(0,_apis_animate_js__WEBPACK_IMPORTED_MODULE_2__.animateAvatarimages)(blurDivs)\n\n\n        // GENERAL INTERSECTION ANIMATION FOR EACH SECTIONS OF THE HOME PAGE\n\n        const sections = document.querySelectorAll(\"section\"); // Add the \"section\" class to relevant sections\n        (0,_apis_animate_js__WEBPACK_IMPORTED_MODULE_2__.animateSections)(sections);\n        \n        \n\n        const floatingNavObserver = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const floatingNavs = floatingNav.querySelectorAll('a');\n                    console.log(entry.target.classList)\n                    floatingNavs.forEach(nav => {\n                        if (entry.target.classList[0].includes(`${nav.classList[0]}`)){\n                            nav.style.backgroundColor = `#2EA787`;\n                        }\n                        else{\n                            nav.style.backgroundColor = `transparent`;\n                        }\n                    })\n                }\n            })\n        }, {threshold:[0]})\n\n        const allOtherSections = document.querySelectorAll('section:not(:first-child)');\n        allOtherSections.forEach(section => {\n            floatingNavObserver.observe(section);\n        })\n\n        const HeaderAndAvatarObserver = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                        avatar.style.opacity = 0;\n                        mainHeader.style.opacity = 0;\n                        mainHeader.style.top = '-100%';\n                        // mainHeader.style.backgroundColor = 'transparent';\n                }else{\n                        avatar.style.opacity = 1;\n                        mainHeader.style.opacity = '1';\n                        mainHeader.style.top = '0';    \n                }\n            })\n        }, {threshold:[0, 0.5, 0.75]})\n        \n        const otherSections = document.querySelectorAll('section:not(:first-of-type)');\n        console.log(otherSections)\n        otherSections.forEach(section => {\n            HeaderAndAvatarObserver.observe(section);\n        })\n\n        mainHeader.style.opacity = '1';\n        mainHeader.style.top = '0';\n\n\n        //Sending contact request from the contact section using the sendMessage API\n        const sendMessageBtn = document.forms[0].querySelector('.sendBtn');\n        sendMessageBtn.addEventListener('click', _apis_sendMessage_js__WEBPACK_IMPORTED_MODULE_3__.sendMessage )\n\n\n})\n\n//# sourceURL=webpack://new-portfolio/./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;